<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="Alt-Ergo" version="2.2.0" timelimit="30" steplimit="0" memlimit="100"/>
<prover id="1" name="CVC4" version="1.4" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Z3" version="4.4.1" alternative="counterexamples" timelimit="30" steplimit="0" memlimit="100"/>
<prover id="3" name="Vampire" version="4.2.2" timelimit="60" steplimit="0" memlimit="1000"/>
<prover id="4" name="Spass" version="3.7" timelimit="60" steplimit="0" memlimit="1000"/>
<prover id="5" name="Z3" version="4.4.1" timelimit="30" steplimit="0" memlimit="4000"/>
<file name="../creal.mlw">
<theory name="Top">
 <goal name="VC power2" expl="VC for power2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC power2.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC power2.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC power2.2" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="VC power2.3" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC power2.4" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC power2.5" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="VC power2.6" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC power2.7" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC power2.8" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC shift_left" expl="VC for shift_left" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="8"/></proof>
 </goal>
 <goal name="VC ediv_mod" expl="VC for ediv_mod" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC ediv_mod.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC ediv_mod.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC ediv_mod.2" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.02" steps="48"/></proof>
  </goal>
  <goal name="VC ediv_mod.3" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC ediv_mod.4" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC ediv_mod.5" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="75"/></proof>
  </goal>
  <goal name="VC ediv_mod.6" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC ediv_mod.7" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC ediv_mod.8" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="VC ediv_mod.9" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="VC ediv_mod.10" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC ediv_mod.11" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC ediv_mod.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC ediv_mod.12.0" expl="VC for ediv_mod" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="21"/></proof>
   </goal>
   <goal name="VC ediv_mod.12.1" expl="VC for ediv_mod" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="102"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC shift_right" expl="VC for shift_right" proved="true">
 <proof prover="0"><result status="valid" time="0.00" steps="10"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="VC shift_right.0" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC shift_right.1" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC shift_right.2" expl="precondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC shift_right.3" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC isqrt" expl="VC for isqrt" proved="true">
 <proof prover="0" obsolete="true"><result status="highfailure" time="11.51"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="VC isqrt.0" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC isqrt.1" expl="loop invariant init" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC isqrt.2" expl="loop variant decrease" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC isqrt.3" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC isqrt.4" expl="loop invariant preservation" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC isqrt.5" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC isqrt.5.0" expl="VC for isqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
   <goal name="VC isqrt.5.1" expl="VC for isqrt" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="75"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC isqrt.6" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.23" steps="520"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC euclid_uniq" expl="VC for euclid_uniq" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="VC _B" expl="VC for _B" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
 <goal name="positiv" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="33"/></proof>
 </goal>
 <goal name="morphisme" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="45"/></proof>
 </goal>
 <goal name="inv" proved="true">
 <proof prover="0"><result status="valid" time="0.12" steps="351"/></proof>
 </goal>
 <goal name="sqrt_B_2n_B_n" proved="true">
 <proof prover="0"><result status="valid" time="0.12" steps="165"/></proof>
 </goal>
 <goal name="question9" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
 </goal>
 <goal name="B_y_power_4_y_pos" proved="true">
 <proof prover="5" memlimit="100"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="B_y_power_4_y_neg">
 <proof prover="0" timelimit="60" memlimit="1000"><result status="timeout" time="60.00"/></proof>
 <proof prover="1" timelimit="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="2" obsolete="true"><result status="outofmemory" time="0.42"/></proof>
 <proof prover="3" obsolete="true"><undone/></proof>
 <proof prover="4" timelimit="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="5" timelimit="1" memlimit="1000"><result status="timeout" time="2.00"/></proof>
 <transf name="split_all_full" >
  <goal name="B_y_power_4_y_neg.0">
  <proof prover="1" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="4" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <proof prover="5" timelimit="5" memlimit="2000"><result status="timeout" time="5.00"/></proof>
  <transf name="introduce_premises" >
   <goal name="B_y_power_4_y_neg.0.0">
   <transf name="inline_goal" >
    <goal name="B_y_power_4_y_neg.0.0.0">
    <proof prover="4"><result status="timeout" time="60.00"/></proof>
    <proof prover="5"><result status="timeout" time="30.00"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 <transf name="split_vc" >
  <goal name="B_y_power_4_y_neg.0">
  </goal>
 </transf>
 </goal>
 <goal name="power_2_2_is_4" proved="true">
 <proof prover="0" timelimit="60" memlimit="1000"><result status="valid" time="0.14" steps="61"/></proof>
 </goal>
</theory>
</file>
</why3session>
