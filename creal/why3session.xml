<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="5">
<prover id="0" name="Alt-Ergo" version="2.2.0" timelimit="30" steplimit="0" memlimit="2000"/>
<prover id="5" name="Z3" version="4.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file name="../creal.mlw">
<theory name="Top">
 <goal name="VC power2" expl="VC for power2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC power2.0" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC power2.1" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
  <goal name="VC power2.2" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC power2.3" expl="loop variant decrease" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC power2.4" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC power2.5" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="25"/></proof>
  </goal>
  <goal name="VC power2.6" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="25"/></proof>
  </goal>
  <goal name="VC power2.7" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC power2.8" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC shift_left" expl="VC for shift_left" proved="true">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.00" steps="8"/></proof>
 </goal>
 <goal name="VC ediv_mod" expl="VC for ediv_mod" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC ediv_mod.0" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC ediv_mod.1" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC ediv_mod.2" expl="loop variant decrease" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="VC ediv_mod.3" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="22"/></proof>
  </goal>
  <goal name="VC ediv_mod.4" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC ediv_mod.5" expl="postcondition" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="75"/></proof>
  </goal>
  <goal name="VC ediv_mod.6" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC ediv_mod.7" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="VC ediv_mod.8" expl="loop variant decrease" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="VC ediv_mod.9" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.00" steps="22"/></proof>
  </goal>
  <goal name="VC ediv_mod.10" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="23"/></proof>
  </goal>
  <goal name="VC ediv_mod.11" expl="assertion" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC ediv_mod.12" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC ediv_mod.12.0" expl="VC for ediv_mod" proved="true">
   <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="21"/></proof>
   </goal>
   <goal name="VC ediv_mod.12.1" expl="VC for ediv_mod" proved="true">
   <proof prover="0" memlimit="100"><result status="valid" time="0.02" steps="102"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC shift_right" expl="VC for shift_right" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC shift_right.0" expl="precondition" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC shift_right.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC shift_right.1.0" expl="assertion" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC shift_right.2" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
  <goal name="VC shift_right.3" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC isqrt" expl="VC for isqrt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC isqrt.0" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="VC isqrt.1" expl="loop invariant init" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="11"/></proof>
  </goal>
  <goal name="VC isqrt.2" expl="loop variant decrease" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC isqrt.3" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC isqrt.4" expl="loop invariant preservation" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC isqrt.5" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC isqrt.5.0" expl="VC for isqrt" proved="true">
   <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
   <goal name="VC isqrt.5.1" expl="VC for isqrt" proved="true">
   <proof prover="0" memlimit="100"><result status="valid" time="0.02" steps="75"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC isqrt.6" expl="postcondition" proved="true">
  <proof prover="0" memlimit="100"><result status="valid" time="0.23" steps="520"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC euclid_uniq" expl="VC for euclid_uniq" proved="true">
 <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="16"/></proof>
 </goal>
 <goal name="VC _B" expl="VC for _B" proved="true">
 <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
 <goal name="VC positiv" expl="VC for positiv" proved="true">
 <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="33"/></proof>
 </goal>
 <goal name="VC morphisme" expl="VC for morphisme" proved="true">
 <proof prover="0" memlimit="100"><result status="valid" time="0.01" steps="45"/></proof>
 </goal>
 <goal name="VC inv" expl="VC for inv" proved="true">
 <proof prover="0" memlimit="100"><result status="valid" time="0.12" steps="351"/></proof>
 </goal>
 <goal name="VC question9" expl="VC for question9" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC question9.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.14" steps="167"/></proof>
  </goal>
  <goal name="VC question9.1" expl="postcondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC b_y_power_4_y_pos" expl="VC for b_y_power_4_y_pos" proved="true">
 <proof prover="5" timelimit="90" memlimit="2000"><result status="valid" time="0.02"/></proof>
 </goal>
 <goal name="VC b_y_power_4_y_neg" expl="VC for b_y_power_4_y_neg" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC b_y_power_4_y_neg.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.03" steps="46"/></proof>
  </goal>
  <goal name="VC b_y_power_4_y_neg.1" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC power_2_2_is_4" expl="VC for power_2_2_is_4" proved="true">
 <proof prover="0"><result status="valid" time="0.14" steps="61"/></proof>
 </goal>
 <goal name="VC round_z_over_4" expl="VC for round_z_over_4" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC round_z_over_4.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC round_z_over_4.0.0" expl="VC for round_z_over_4" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.12" steps="177"/></proof>
   </goal>
   <goal name="VC round_z_over_4.0.1" expl="VC for round_z_over_4" proved="true">
   <proof prover="5" timelimit="30" memlimit="2000"><result status="valid" time="0.03"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC round_z_over_4.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC round_z_over_4.1.0" expl="VC for round_z_over_4" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
   <goal name="VC round_z_over_4.1.1" expl="VC for round_z_over_4" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="1.40" steps="665"/></proof>
   </goal>
   <goal name="VC round_z_over_4.1.2" expl="VC for round_z_over_4" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="1.97" steps="717"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC round_z_over_4.2" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC round_z_over_4.3" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC round_z_over_4.3.0" expl="VC for round_z_over_4" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="2.28" steps="918"/></proof>
   </goal>
   <goal name="VC round_z_over_4.3.1" expl="VC for round_z_over_4" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="2.32" steps="919"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute_round" expl="VC for compute_round" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC compute_round.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_round.0.0" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
   </goal>
   <goal name="VC compute_round.0.1" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.64" steps="406"/></proof>
   </goal>
   <goal name="VC compute_round.0.2" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
   </goal>
   <goal name="VC compute_round.0.3" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_round.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_round.1.0" expl="VC for compute_round" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="VC compute_round.1.1" expl="VC for compute_round" proved="true">
   <proof prover="0"><result status="valid" time="1.65" steps="432"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_round.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC compute_round.3" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="125"/></proof>
  </goal>
  <goal name="VC compute_round.4" expl="postcondition" proved="true">
  <proof prover="0"><result status="valid" time="0.04" steps="151"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute_add" expl="VC for compute_add" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC compute_add.0" expl="precondition" proved="true">
  <proof prover="0" timelimit="60" memlimit="1000"><result status="valid" time="0.06" steps="45"/></proof>
  </goal>
  <goal name="VC compute_add.1" expl="postcondition" proved="true">
  <proof prover="0" timelimit="60" memlimit="1000"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute_neg" expl="VC for compute_neg" proved="true">
 <proof prover="0" timelimit="60" memlimit="1000"><result status="valid" time="0.03" steps="94"/></proof>
 </goal>
 <goal name="VC compute_sub" expl="VC for compute_sub" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC compute_sub.0" expl="precondition" proved="true">
  <proof prover="0" timelimit="60" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC compute_sub.1" expl="precondition" proved="true">
  <proof prover="0" timelimit="60" memlimit="1000"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC compute_sub.2" expl="precondition" proved="true">
  <proof prover="0" timelimit="60" memlimit="1000"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC compute_sub.3" expl="postcondition" proved="true">
  <proof prover="0" timelimit="60" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute_cst" expl="VC for compute_cst" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC compute_cst.0" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC compute_cst.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_cst.1.0" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.07" steps="166"/></proof>
   </goal>
   <goal name="VC compute_cst.1.1" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.04" steps="104"/></proof>
   </goal>
   <goal name="VC compute_cst.1.2" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
   <goal name="VC compute_cst.1.3" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03" steps="20"/></proof>
   </goal>
   <goal name="VC compute_cst.1.4" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.04" steps="22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_cst.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_cst.2.0" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03" steps="16"/></proof>
   </goal>
   <goal name="VC compute_cst.2.1" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03" steps="18"/></proof>
   </goal>
   <goal name="VC compute_cst.2.2" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03" steps="18"/></proof>
   </goal>
   <goal name="VC compute_cst.2.3" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="20"/></proof>
   </goal>
   <goal name="VC compute_cst.2.4" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="21"/></proof>
   </goal>
   <goal name="VC compute_cst.2.5" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03" steps="24"/></proof>
   </goal>
   <goal name="VC compute_cst.2.6" expl="VC for compute_cst" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03" steps="26"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_cst.3" expl="assertion" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC compute_cst.4" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC compute_cst.5" expl="assertion" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.28" steps="480"/></proof>
  </goal>
  <goal name="VC compute_cst.6" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC compute_cst.7" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.04" steps="130"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC sqrt_floor" expl="VC for sqrt_floor" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sqrt_floor.0" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC sqrt_floor.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC sqrt_floor.1.0" expl="VC for sqrt_floor" proved="true">
   <proof prover="0"><result status="valid" time="0.02" steps="83"/></proof>
   </goal>
   <goal name="VC sqrt_floor.1.1" expl="VC for sqrt_floor" proved="true">
   <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sqrt_floor.2" expl="assertion" proved="true">
  <proof prover="0"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC sqrt_floor.3" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.05" steps="258"/></proof>
  </goal>
  <goal name="VC sqrt_floor.4" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC sqrt_floor.4.0" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="129"/></proof>
   </goal>
   <goal name="VC sqrt_floor.4.1" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="VC sqrt_floor.4.2" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.43" steps="411"/></proof>
   </goal>
   <goal name="VC sqrt_floor.4.3" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.14" steps="367"/></proof>
   </goal>
   <goal name="VC sqrt_floor.4.4" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="20"/></proof>
   </goal>
   <goal name="VC sqrt_floor.4.5" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.71" steps="477"/></proof>
   </goal>
   <goal name="VC sqrt_floor.4.6" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="29"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sqrt_floor.5" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC sqrt_floor.5.0" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="22"/></proof>
   </goal>
   <goal name="VC sqrt_floor.5.1" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.41" steps="472"/></proof>
   </goal>
   <goal name="VC sqrt_floor.5.2" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.26" steps="682"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC sqrt_floor.6" expl="postcondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC sqrt_floor.6.0" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.10" steps="178"/></proof>
   </goal>
   <goal name="VC sqrt_floor.6.1" expl="VC for sqrt_floor" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="1.24" steps="1926"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC sqrt_str_inc" expl="VC for sqrt_str_inc" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC sqrt_str_inc.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC sqrt_str_inc.1" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC sqrt_str_inc.2" expl="postcondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.00" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute_sqrt" expl="VC for compute_sqrt" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC compute_sqrt.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="13.17" steps="9059"/></proof>
  </goal>
  <goal name="VC compute_sqrt.1" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC compute_sqrt.2" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC compute_sqrt.3" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC compute_sqrt.4" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="VC compute_sqrt.5" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute_sqrt.5.0" expl="VC for compute_sqrt" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
   <goal name="VC compute_sqrt.5.1" expl="VC for compute_sqrt" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
   <goal name="VC compute_sqrt.5.2" expl="VC for compute_sqrt" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="VC compute_sqrt.5.3" expl="VC for compute_sqrt" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="VC compute_sqrt.5.4" expl="VC for compute_sqrt" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="VC compute_sqrt.5.5" expl="VC for compute_sqrt" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="4.33" steps="2644"/></proof>
   </goal>
   <goal name="VC compute_sqrt.5.6" expl="VC for compute_sqrt" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.03" steps="28"/></proof>
   </goal>
   <goal name="VC compute_sqrt.5.7" expl="VC for compute_sqrt" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="VC compute_sqrt.5.8" expl="VC for compute_sqrt" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="VC compute_sqrt.5.9" expl="VC for compute_sqrt" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.03" steps="28"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute_sqrt.6" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="VC compute_sqrt.7" expl="postcondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="1.07" steps="543"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC interp" expl="VC for interp" proved="true">
 <proof prover="0"><result status="valid" time="0.01" steps="8"/></proof>
 </goal>
 <goal name="VC compute" expl="VC for compute" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC compute.0" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.04" steps="261"/></proof>
  </goal>
  <goal name="VC compute.1" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC compute.2" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.08" steps="365"/></proof>
  </goal>
  <goal name="VC compute.3" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC compute.4" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC compute.5" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC compute.6" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.04" steps="214"/></proof>
  </goal>
  <goal name="VC compute.7" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC compute.8" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC compute.9" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.04" steps="261"/></proof>
  </goal>
  <goal name="VC compute.10" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC compute.11" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.12" steps="365"/></proof>
  </goal>
  <goal name="VC compute.12" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC compute.13" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.00" steps="16"/></proof>
  </goal>
  <goal name="VC compute.14" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC compute.15" expl="variant decrease" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="230"/></proof>
  </goal>
  <goal name="VC compute.16" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC compute.17" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC compute.18" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC compute.19" expl="postcondition" proved="true">
  <transf name="compute_hyp" proved="true" >
   <goal name="VC compute.19.0" expl="postcondition" proved="true">
   <transf name="destruct_alg" proved="true" arg1="t">
    <goal name="VC compute.19.0.0" expl="postcondition" proved="true">
    <proof prover="0" timelimit="90"><result status="valid" time="0.10" steps="302"/></proof>
    </goal>
    <goal name="VC compute.19.0.1" expl="postcondition" proved="true">
    <proof prover="0" timelimit="90"><result status="valid" time="0.09" steps="312"/></proof>
    </goal>
    <goal name="VC compute.19.0.2" expl="postcondition" proved="true">
    <proof prover="0" timelimit="90"><result status="valid" time="0.13" steps="298"/></proof>
    </goal>
    <goal name="VC compute.19.0.3" expl="postcondition" proved="true">
    <proof prover="0" timelimit="90"><result status="valid" time="0.12" steps="312"/></proof>
    </goal>
    <goal name="VC compute.19.0.4" expl="postcondition" proved="true">
    <proof prover="0" timelimit="90"><result status="valid" time="0.13" steps="347"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC div_a_b_plus_1" expl="VC for div_a_b_plus_1" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC div_a_b_plus_1.0" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC div_a_b_plus_1.1" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC div_a_b_plus_1.2" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC div_a_b_plus_1.3" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC div_a_b_plus_1.4" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC div_a_b_plus_1.5" expl="precondition" proved="true">
  <proof prover="5"><result status="valid" time="0.04"/></proof>
  </goal>
  <goal name="VC div_a_b_plus_1.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC div_a_b_plus_1.6.0" expl="VC for div_a_b_plus_1" proved="true">
   <proof prover="5"><result status="valid" time="0.04"/></proof>
   </goal>
   <goal name="VC div_a_b_plus_1.6.1" expl="VC for div_a_b_plus_1" proved="true">
   <proof prover="5"><result status="valid" time="0.02"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_a_b_plus_1.7" expl="assertion" proved="true">
  <proof prover="5"><result status="valid" time="0.01"/></proof>
  </goal>
  <goal name="VC div_a_b_plus_1.8" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.03" steps="19"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="VC div_a_b_plus_1.8.0" expl="VC for div_a_b_plus_1" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.04" steps="110"/></proof>
   </goal>
   <goal name="VC div_a_b_plus_1.8.1" expl="VC for div_a_b_plus_1" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
   <goal name="VC div_a_b_plus_1.8.2" expl="VC for div_a_b_plus_1" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_a_b_plus_1.9" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC div_a_b_plus_1.10" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC div_a_b_plus_1.10.0" expl="VC for div_a_b_plus_1" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="21"/></proof>
   </goal>
   <goal name="VC div_a_b_plus_1.10.1" expl="VC for div_a_b_plus_1" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="125"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_a_b_plus_1.11" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="22"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="VC div_a_b_plus_1.11.0" expl="assertion" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_a_b_plus_1.12" expl="postcondition" proved="true">
  <transf name="eliminate_if" proved="true" >
   <goal name="VC div_a_b_plus_1.12.0" expl="VC for div_a_b_plus_1" proved="true">
   <transf name="split_vc" proved="true" >
    <goal name="VC div_a_b_plus_1.12.0.0" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.01"/></proof>
    </goal>
    <goal name="VC div_a_b_plus_1.12.0.1" expl="postcondition" proved="true">
    <proof prover="5"><result status="valid" time="0.01"/></proof>
    </goal>
   </transf>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC div_a_b_minus_1" expl="VC for div_a_b_minus_1" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC div_a_b_minus_1.0" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="14"/></proof>
  </goal>
  <goal name="VC div_a_b_minus_1.1" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC div_a_b_minus_1.2" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC div_a_b_minus_1.3" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC div_a_b_minus_1.4" expl="assertion" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC div_a_b_minus_1.5" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC div_a_b_minus_1.6" expl="precondition" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC div_a_b_minus_1.6.0" expl="VC for div_a_b_minus_1" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="21"/></proof>
   </goal>
   <goal name="VC div_a_b_minus_1.6.1" expl="VC for div_a_b_minus_1" proved="true">
   <proof prover="0" timelimit="90"><result status="valid" time="0.05" steps="133"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC div_a_b_minus_1.7" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="VC div_a_b_minus_1.8" expl="precondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="VC div_a_b_minus_1.9" expl="postcondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC inv_str_decr" expl="VC for inv_str_decr" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC inv_str_decr.0" expl="assertion" proved="true">
  <proof prover="5" timelimit="90" memlimit="2000"><result status="valid" time="0.05"/></proof>
  </goal>
  <goal name="VC inv_str_decr.1" expl="assertion" proved="true">
  <proof prover="5" timelimit="90" memlimit="2000"><result status="valid" time="0.45"/></proof>
  </goal>
  <goal name="VC inv_str_decr.2" expl="postcondition" proved="true">
  <proof prover="0" timelimit="90"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC help_assert" expl="VC for help_assert" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC help_assert.0" expl="assertion" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.10" steps="202"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="VC help_assert.0.0" expl="VC for help_assert" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="16"/></proof>
   </goal>
   <goal name="VC help_assert.0.1" expl="VC for help_assert" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
   <goal name="VC help_assert.0.2" expl="VC for help_assert" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.12" steps="221"/></proof>
   </goal>
   <goal name="VC help_assert.0.3" expl="VC for help_assert" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="20"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC help_assert.1" expl="assertion" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC help_assert.2" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC help_assert.2.0" expl="VC for help_assert" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.05" steps="92"/></proof>
   </goal>
   <goal name="VC help_assert.2.1" expl="VC for help_assert" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="20"/></proof>
   </goal>
   <goal name="VC help_assert.2.2" expl="VC for help_assert" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC help_assert.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC help_assert.3.0" expl="VC for help_assert" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
   <goal name="VC help_assert.3.1" expl="VC for help_assert" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="24"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC help_assert.4" expl="postcondition" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC inv_simple_simple" expl="VC for inv_simple_simple">
 <transf name="split_vc" >
  <goal name="VC inv_simple_simple.0" expl="precondition" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.00" steps="14"/></proof>
  </goal>
  <goal name="VC inv_simple_simple.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC inv_simple_simple.1.0" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="16"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.1" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="19"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.2" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="5.28" steps="19"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.3" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="17"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.4" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.1.5" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="23"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC inv_simple_simple.2" expl="precondition" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="18"/></proof>
  <transf name="split_vc" proved="true" >
   <goal name="VC inv_simple_simple.2.0" expl="precondition" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC inv_simple_simple.3" expl="precondition" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC inv_simple_simple.4" expl="precondition" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="VC inv_simple_simple.5" expl="precondition" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC inv_simple_simple.6" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC inv_simple_simple.6.0" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="26"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.6.1" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.6.2" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="27"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.6.3" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="27"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.6.4" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.6.5" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="28"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.6.6" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="28"/></proof>
   </goal>
   <goal name="VC inv_simple_simple.6.7" expl="VC for inv_simple_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.03" steps="32"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC inv_simple_simple.7" expl="postcondition">
  </goal>
 </transf>
 </goal>
 <goal name="VC inv_simple" expl="VC for inv_simple" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC inv_simple.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC inv_simple.0.0" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
   <goal name="VC inv_simple.0.1" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="20"/></proof>
   </goal>
   <goal name="VC inv_simple.0.2" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="18"/></proof>
   </goal>
   <goal name="VC inv_simple.0.3" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.06" steps="23"/></proof>
   </goal>
   <goal name="VC inv_simple.0.4" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="23"/></proof>
   </goal>
   <goal name="VC inv_simple.0.5" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.06" steps="27"/></proof>
   </goal>
   <goal name="VC inv_simple.0.6" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.03" steps="25"/></proof>
   </goal>
   <goal name="VC inv_simple.0.7" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.09" steps="30"/></proof>
   </goal>
   <goal name="VC inv_simple.0.8" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.05" steps="30"/></proof>
   </goal>
   <goal name="VC inv_simple.0.9" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.05" steps="34"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC inv_simple.1" expl="assertion" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.12" steps="73"/></proof>
  </goal>
  <goal name="VC inv_simple.2" expl="precondition" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC inv_simple.3" expl="precondition" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC inv_simple.4" expl="precondition" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC inv_simple.5" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC inv_simple.5.0" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="22"/></proof>
   </goal>
   <goal name="VC inv_simple.5.1" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.52" steps="300"/></proof>
   </goal>
   <goal name="VC inv_simple.5.2" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.04" steps="97"/></proof>
   </goal>
   <goal name="VC inv_simple.5.3" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.02" steps="24"/></proof>
   </goal>
   <goal name="VC inv_simple.5.4" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.18" steps="122"/></proof>
   </goal>
   <goal name="VC inv_simple.5.5" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.05" steps="32"/></proof>
   </goal>
   <goal name="VC inv_simple.5.6" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.03" steps="32"/></proof>
   </goal>
   <goal name="VC inv_simple.5.7" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.04" steps="32"/></proof>
   </goal>
   <goal name="VC inv_simple.5.8" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.11" steps="34"/></proof>
   </goal>
   <goal name="VC inv_simple.5.9" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="3.72" steps="158"/></proof>
   </goal>
   <goal name="VC inv_simple.5.10" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.07" steps="38"/></proof>
   </goal>
   <goal name="VC inv_simple.5.11" expl="VC for inv_simple" proved="true">
   <proof prover="0" timelimit="40"><result status="valid" time="0.08" steps="40"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC inv_simple.6" expl="postcondition" proved="true">
  <proof prover="0" timelimit="40"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC interp2" expl="VC for interp2" proved="true">
 <transf name="split_vc" proved="true" >
 </transf>
 </goal>
 <goal name="VC frame_opp" expl="VC for frame_opp" proved="true">
 <proof prover="0" memlimit="1000"><result status="valid" time="0.03" steps="96"/></proof>
 </goal>
 <goal name="VC pow2_log2" expl="VC for pow2_log2" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC pow2_log2.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC pow2_log2.0.0" expl="VC for pow2_log2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="12"/></proof>
   </goal>
   <goal name="VC pow2_log2.0.1" expl="VC for pow2_log2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="12"/></proof>
   </goal>
   <goal name="VC pow2_log2.0.2" expl="VC for pow2_log2" proved="true">
   <proof prover="5" timelimit="30"><result status="valid" time="2.55"/></proof>
   </goal>
   <goal name="VC pow2_log2.0.3" expl="VC for pow2_log2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="12"/></proof>
   </goal>
   <goal name="VC pow2_log2.0.4" expl="VC for pow2_log2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="10"/></proof>
   </goal>
   <goal name="VC pow2_log2.0.5" expl="VC for pow2_log2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC pow2_log2.1" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="21"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC diff_log" expl="VC for diff_log" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC diff_log.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC diff_log.0.0" expl="VC for diff_log" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
   <goal name="VC diff_log.0.1" expl="VC for diff_log" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
   <goal name="VC diff_log.0.2" expl="VC for diff_log" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
   <goal name="VC diff_log.0.3" expl="VC for diff_log" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="49"/></proof>
   </goal>
   <goal name="VC diff_log.0.4" expl="VC for diff_log" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="14"/></proof>
   </goal>
   <goal name="VC diff_log.0.5" expl="VC for diff_log" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="19"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_log.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC diff_log.1.0" expl="VC for diff_log" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="14"/></proof>
   </goal>
   <goal name="VC diff_log.1.1" expl="VC for diff_log" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC diff_log.1.2" expl="VC for diff_log" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="62"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC diff_log.2" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC exists_m" expl="VC for exists_m" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC exists_m.0" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC exists_m.0.0" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="14"/></proof>
   </goal>
   <goal name="VC exists_m.0.1" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.12" steps="403"/></proof>
   </goal>
   <goal name="VC exists_m.0.2" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
   <goal name="VC exists_m.0.3" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC exists_m.1" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC exists_m.1.0" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="12"/></proof>
   </goal>
   <goal name="VC exists_m.1.1" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03" steps="101"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC exists_m.2" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="14"/></proof>
  </goal>
  <goal name="VC exists_m.3" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC exists_m.3.0" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
   <goal name="VC exists_m.3.1" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.41" steps="297"/></proof>
   </goal>
   <goal name="VC exists_m.3.2" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.07" steps="67"/></proof>
   </goal>
   <goal name="VC exists_m.3.3" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
   <goal name="VC exists_m.3.4" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
   <goal name="VC exists_m.3.5" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.03" steps="16"/></proof>
   </goal>
   <goal name="VC exists_m.3.6" expl="VC for exists_m" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="18"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC exists_m.4" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.20" steps="410"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC exists_m_term" expl="VC for exists_m_term" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="VC exists_m_term.0" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="12"/></proof>
  </goal>
  <goal name="VC exists_m_term.1" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="12"/></proof>
  </goal>
  <goal name="VC exists_m_term.2" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="VC compute2" expl="VC for compute2">
 <transf name="split_vc" >
  <goal name="VC compute2.0" expl="variant decrease" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.07" steps="362"/></proof>
  </goal>
  <goal name="VC compute2.1" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.2" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.3" expl="variant decrease" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.16" steps="569"/></proof>
  </goal>
  <goal name="VC compute2.4" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="VC compute2.5" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC compute2.6" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="VC compute2.7" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="VC compute2.8" expl="variant decrease" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.04" steps="290"/></proof>
  </goal>
  <goal name="VC compute2.9" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.10" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.11" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.12" expl="variant decrease" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.06" steps="361"/></proof>
  </goal>
  <goal name="VC compute2.13" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.14" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.15" expl="variant decrease" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.13" steps="565"/></proof>
  </goal>
  <goal name="VC compute2.16" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC compute2.17" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC compute2.18" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC compute2.19" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC compute2.20" expl="variant decrease" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.04" steps="317"/></proof>
  </goal>
  <goal name="VC compute2.21" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.22" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.23" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC compute2.24" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="18"/></proof>
  </goal>
  <goal name="VC compute2.25" expl="variant decrease" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.04" steps="323"/></proof>
  </goal>
  <goal name="VC compute2.26" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.27" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.28" expl="variant decrease">
  <proof prover="0" memlimit="1000"><undone/></proof>
  <proof prover="5" timelimit="30" obsolete="true"><result status="outofmemory" time="12.36"/></proof>
  </goal>
  <goal name="VC compute2.29" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="16"/></proof>
  </goal>
  <goal name="VC compute2.30" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="VC compute2.31" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC compute2.32" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="21"/></proof>
  </goal>
  <goal name="VC compute2.33" expl="variant decrease" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.28" steps="611"/></proof>
  </goal>
  <goal name="VC compute2.34" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="22"/></proof>
  </goal>
  <goal name="VC compute2.35" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="20"/></proof>
  </goal>
  <goal name="VC compute2.36" expl="assertion" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="20"/></proof>
  </goal>
  <goal name="VC compute2.37" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="VC compute2.38" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="VC compute2.39" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="VC compute2.40" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="VC compute2.41" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="VC compute2.42" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="24"/></proof>
  </goal>
  <goal name="VC compute2.43" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="24"/></proof>
  </goal>
  <goal name="VC compute2.44" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="27"/></proof>
  </goal>
  <goal name="VC compute2.45" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC compute2.45.0" expl="VC for compute2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="26"/></proof>
   </goal>
   <goal name="VC compute2.45.1" expl="VC for compute2" proved="true">
   <proof prover="5" timelimit="30"><result status="valid" time="0.01"/></proof>
   </goal>
   <goal name="VC compute2.45.2" expl="VC for compute2" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC compute2.46" expl="postcondition" proved="true">
  <transf name="destruct_alg" proved="true" arg1="t">
   <goal name="VC compute2.46.0" expl="postcondition" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC compute2.46.1" expl="postcondition" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC compute2.46.2" expl="postcondition" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.04" steps="16"/></proof>
   </goal>
   <goal name="VC compute2.46.3" expl="postcondition" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
   </goal>
   <goal name="VC compute2.46.4" expl="postcondition" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.04" steps="62"/></proof>
   </goal>
   <goal name="VC compute2.46.5" expl="postcondition" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="76"/></proof>
   </goal>
  </transf>
  </goal>
 </transf>
 </goal>
 <goal name="VC msd" expl="VC for msd">
 <transf name="split_vc" >
  <goal name="VC msd.0" expl="variant decrease" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC msd.1" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC msd.2" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="16"/></proof>
  </goal>
  <goal name="VC msd.3" expl="variant decrease">
  <proof prover="0" memlimit="1000"><undone/></proof>
  <proof prover="5" timelimit="30" obsolete="true"><result status="timeout" time="30.00"/></proof>
  </goal>
  <goal name="VC msd.4" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="18"/></proof>
  </goal>
  <goal name="VC msd.5" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC msd.6" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="19"/></proof>
  </goal>
  <goal name="VC msd.7" expl="precondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="19"/></proof>
  </goal>
  <goal name="VC msd.8" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC msd.8.0" expl="VC for msd" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="28"/></proof>
   </goal>
   <goal name="VC msd.8.1" expl="VC for msd" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.18" steps="396"/></proof>
   </goal>
   <goal name="VC msd.8.2" expl="VC for msd" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="30"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC msd.9" expl="assertion" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="VC msd.9.0" expl="VC for msd" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="26"/></proof>
   </goal>
   <goal name="VC msd.9.1" expl="VC for msd" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="27"/></proof>
   </goal>
   <goal name="VC msd.9.2" expl="VC for msd" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="90"/></proof>
   </goal>
   <goal name="VC msd.9.3" expl="VC for msd" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
   <goal name="VC msd.9.4" expl="VC for msd" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="32"/></proof>
   </goal>
   <goal name="VC msd.9.5" expl="VC for msd" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="30"/></proof>
   </goal>
   <goal name="VC msd.9.6" expl="VC for msd" proved="true">
   <proof prover="0" memlimit="1000"><result status="valid" time="0.01" steps="35"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="VC msd.10" expl="postcondition" proved="true">
  <proof prover="0" memlimit="1000"><result status="valid" time="0.02" steps="28"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
</file>
</why3session>
